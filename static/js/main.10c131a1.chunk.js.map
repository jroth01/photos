{"version":3,"sources":["modules/counter.js","modules/index.js","store.js","containers/NotFound/index.js","containers/Album/index.js","containers/Home/index.js","containers/Photo/index.js","routes/AlbumSwitch.js","routes/index.js","containers/App/index.js","index.js"],"names":["initialState","count","isIncrementing","isDecrementing","combineReducers","counter","state","arguments","length","undefined","type","Object","objectSpread","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","NotFound","props","react_default","a","createElement","resource","AlbumHeader","_ref","album","style","margin","name","date","ImageList","_ref2","photos","map","photo","key","id","Link","to","width","height","src","Album","this","match","params","toString","react_apollo_browser_umd","query","gql","_templateObject","ALBUM","_ref3","loading","error","data","message","react","Album_AlbumHeader","Album_ImageList","containers_NotFound","Component","ALBUMS_QUERY","Home_templateObject","Home","albums","Viewer","styled","div","_templateObject2","Img","img","_templateObject3","Btn","button","_templateObject4","Image","Photo","Photo_templateObject","PHOTO","Photo_Image","disabled","AlbumSwitch","location","Switch","Route","exact","path","component","Routes","BrowserRouter","App","routes","GRAPHQL_SERVER","process","REACT_APP_GRAPHQL_SERVER","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","target","document","querySelector","render","es","store","lib","containers_App"],"mappings":"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","file":"static/js/main.10c131a1.chunk.js","sourcesContent":["export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}\n","import { combineReducers } from 'redux'\nimport counter from './counter'\n\nexport default combineReducers({\n  counter,\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React from 'react';\n\nconst NotFound = (props) => (\n<div>\n  <h1>404</h1>\n  {props.resource ? <div>\"{props.resource}\" not found</div> : null}\n</div>);\n\nexport default NotFound;","import React, {Component, Fragment} from 'react';\nimport {Link } from 'react-router-dom'\nimport NotFound from '../NotFound';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport const ALBUM = (id) => gql`\n  query{\n    album(id: \"${id}\"){\n      id\n      name\n      date\n      photos {\n        id\n        src\n      }\n    }\n  }\n`\n\nconst AlbumHeader = ({album}) => (\n  <div>\n  <h1 style={{margin:0}}>Album: {album && album.name}</h1>\n  {album && <small> Date: {album.date}</small>}\n  </div>\n);\n\nconst ImageList = ({album}) => (\n  <div>\n    {album.photos.map(photo => \n      <span key={photo.id}>\n        <Link to={`/album/${album.id}/photo/${photo.id}`}>\n        <img width={200} height={200 / (16/9)} src={photo.src} />\n        </Link>\n      </span>\n    )}\n  </div>\n);\n\nclass Album extends Component {\n  render() {\n    const id = this.props.match.params.id.toString()\n    return (<Query query={ALBUM(id)}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>\n          if (error) {\n            return (<div>{error.message}</div>)\n          }\n         \n          if (!data.album) return <NotFound/>\n          return (\n            <Fragment>\n              <AlbumHeader {...data}/>\n              <ImageList {...data}/>\n            </Fragment>\n          )\n        }}\n      </Query>)\n  }\n}\n\nexport default Album;","import React, { Component, Fragment } from 'react'\nimport {Link} from 'react-router-dom'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport const ALBUMS_QUERY = gql`\n  query{\n    albums{\n      id\n      name\n      date\n    }\n  }\n`\n\nclass Home extends Component {\n  render() {\n    return (\n      <Query query={ALBUMS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>\n          if (error) return <div>{error.message}</div>\n          if (!data.albums) return <div>No albums</div>\n          return (\n            <Fragment>\n              <h1 style={{margin:0}}>Albums</h1>\n              <ul>\n                {data.albums.map(album => \n                <li key={album.id}>\n                  <Link to={`/album/${album.id}`}>\n                    {album.name} - <small>{album.date}</small>\n                  </Link>\n                </li>\n                )}\n              </ul>\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default Home\n","import React, {Component, Fragment} from 'react';\nimport styled from 'styled-components';\nimport NotFound from '../NotFound';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport const PHOTO = (id) => gql`\n  query{\n    photo(id: \"${id}\"){\n      id\n      name\n      src\n    }\n  }\n`\n\nconst Viewer = styled.div`\n  height: 100vh;\n  text-align:center;\n`;\n\nconst Img = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Btn = styled.button`\n  display:inline-block;\n  margin: 8px;\n`;\n\nconst Image = ({photo}) => (\n  <div>\n    <Img key={photo.id} width={200} height={200/ (16/9)} src={photo.src} /> \n  </div>\n);\n\nclass Photo extends Component{\n  render() {\n    const id = this.props.match.params.id.toString()\n    return (<Query query={PHOTO(id)}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>\n          if (error) return <div>{error.message}</div>\n          if (!data.photo) return <NotFound/>\n          return (\n            <Fragment>\n              <Viewer>\n                <Image photo={data.photo}/>\n                <Btn disabled>previous</Btn>\n                <Btn disabled>next</Btn>\n              </Viewer>\n            </Fragment>\n          )\n        }}\n      </Query>)\n  }\n}\n\nexport default Photo;","import React, {Component} from 'react'\nimport { Switch, Route } from \"react-router-dom\";\nimport NotFound from '../containers/NotFound';\nimport Album from '../containers/Album';\nimport Home from '../containers/Home';\nimport Photo from '../containers/Photo';\n\nclass AlbumSwitch extends Component {\n  render() {\n    let { location } = this.props;\n    return (\n      <div>\n        <Switch location={location}>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/album/:id\" component={Album} />\n          <Route exact path=\"/album/:id/photo/:id\" component={Photo} />\n          <Route component={NotFound}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default AlbumSwitch;","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport AlbumSwitch from './AlbumSwitch';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst Routes = () => (\n  <div>\n    <Router>\n      <Route component={AlbumSwitch} />\n    </Router>\n  </div>\n)\n\nexport default Routes\n","import React from 'react'\nimport Routes from '../../routes'\n\nconst App = () => <Routes/>\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/App'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst GRAPHQL_SERVER = process.env.REACT_APP_GRAPHQL_SERVER || 'http://localhost:4000';\n\nconst httpLink = createHttpLink({\n  uri:  GRAPHQL_SERVER,\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nconst target = document.querySelector('#root')\n\nrender(\n  <ApolloProvider client={client}>\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>\n  </ApolloProvider>,\n  target\n)\n"],"sourceRoot":""}